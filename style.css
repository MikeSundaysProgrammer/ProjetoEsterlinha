@import url("https://fonts.googleapis.com/css2?family=Roboto&family=Rochester&display=swap");

/* dear reader sorry for the ugly animation and layout code but since
  this is a small project no need to over-optimize. Maybe sass would
  have helped... but to late for that!!! So I feel sorry for you,
  but good luck:-) You are going to need it!*/

html,
body {
  font-family: "Roboto", sans-serif;
  overflow: hidden;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  margin: 0;
}
main {
  height: 100vh;
}

* {
  box-sizing: border-box;
}

button {
  appearance: none;
  outline: none;
  border: none;
}

:root {
  --box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px,
    rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px,
    rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;

  --titleTopMargin: 1.2rem;
  --titleVerticalMargin: calc(var(--titleTopMargin) * 2);
  --titleHeightWithMargins: calc(
    var(--titleVerticalMargin) + var(--titleHeight)
  );

  --poetryVideoContainerWidth: 240px;
  --poetryVideoContainerHeight: 503px;

  --halfIndividualContentWidth: calc(var(--individualContentWidth) / 2);

  --animationTimingFunctionPrimary: ease-in-out;
  --animationTimingFunctionSecondary: linear;

  --firstScreenEnterAnimationDelay: 1s;
  --firstScreenEnterAnimationDuration: 3s;

  /* How small the animation is compared to the normal enter animation.
      E.g: a value of 2 means it takes 1/2 of the duration*/
  --secondScreenEnterAnimationRelativeDuration: 1.2;
  --secondScreenEnterAnimationDuration: calc(
    var(--firstScreenEnterAnimationDuration) /
      var(--secondScreenEnterAnimationRelativeDuration)
  );
  --secondScreenEnterAnimationDelay: calc(
    var(--firstScreenEnterAnimationDelay) +
      calc(
        var(--firstScreenEnterAnimationDuration) -
          var(--secondScreenEnterAnimationDuration)
      )
  );

  --contentEnterAnimationRelativeDuration: 1.8;
  --contentEnterAnimationDuration: calc(
    var(--firstScreenEnterAnimationDuration) /
      var(--contentEnterAnimationRelativeDuration)
  );
  --contentEnterAnimationDelay: calc(
    var(--firstScreenEnterAnimationDelay) +
      calc(
        var(--firstScreenEnterAnimationDuration) -
          var(--contentEnterAnimationDuration)
      )
  );

  --contentExitAnimationTranslationValue: calc(
    50vw + var(--halfIndividualContentWidth)
  );
  --contentExitAnimationDuration: 1300ms;

  --poetryVideoEnterAnimationRelativeDuration: 1.4;
  --poetryVideoEnterAnimationDuration: calc(
    var(--contentExitAnimationDuration) /
      var(--poetryVideoEnterAnimationRelativeDuration)
  );
  --poetryVideoEnterAnimationDelay: calc(
    var(--contentExitAnimationDuration) -
      var(--poetryVideoEnterAnimationDuration)
  );
}

.invisible {
  opacity: 0;
}

#content {
  opacity: 0;
  position: absolute;
  z-index: 1;

  top: 0;
  bottom: 0;
  left: 0;
  right: 0;

  animation: show var(--contentEnterAnimationDuration)
    var(--animationTimingFunctionPrimary) var(--contentEnterAnimationDelay);
  animation-fill-mode: forwards;

  display: flex;
  align-items: center;
  justify-content: center;

  --lateralPadding: 1rem;
  padding-left: var(--lateralPadding);
  padding-right: var(--lateralPadding);
}

#curtain {
  z-index: 1;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  position: absolute;

  display: flex;
}

.partOfCurtain {
  flex-grow: 1;
  border: none;
}

#title {
  z-index: 2;
  position: relative;

  color: white;

  text-align: center;
  text-shadow: 0 2px 1px #747474, -1px 3px 1px #767676, -2px 5px 1px #787878;

  font-size: max(2.5rem, 3vw);
  font-family: "Rochester", cursive;

  --halfTitleHeight: calc(var(--titleHeight) / 2);
  --negativeHalfTitleHeight: calc(-1 * var(--halfTitleHeight));
  --yTranslationValue: calc(var(--negativeHalfTitleHeight) + 50vh);
  transform: translateY(var(--yTranslationValue));

  animation: titleEnterAnimation var(--firstScreenEnterAnimationDuration)
    var(--animationTimingFunctionPrimary) var(--firstScreenEnterAnimationDelay);
  animation-fill-mode: forwards;

  margin-top: var(--titleTopMargin);
}

#curtain {
  overflow-x: hidden;
}

#curtainLeft {
  animation: curtainLeftExitAnimation var(--firstScreenEnterAnimationDuration)
    var(--animationTimingFunctionPrimary) var(--firstScreenEnterAnimationDelay);
  animation-fill-mode: forwards;
}

#curtainRight {
  animation: curtainRightExitAnimation var(--firstScreenEnterAnimationDuration)
    var(--animationTimingFunctionPrimary) var(--firstScreenEnterAnimationDelay);
  animation-fill-mode: forwards;
}

#background {
  position: absolute;

  top: 0;
  bottom: 0;
  right: 0;
  left: 0;

  opacity: 0;

  background: linear-gradient(to left, #f00000, #dc281e);

  animation: show var(--secondScreenEnterAnimationDuration)
    var(--animationTimingFunctionPrimary) var(--secondScreenEnterAnimationDelay);
  animation-fill-mode: forwards;
}

#content-layout {
  flex-grow: 1;

  display: flex;
  flex-direction: column;
  align-items: center;
}

.individual-content {
  cursor: pointer;

  width: 100%;
  height: 7rem;
  max-width: 80ch;

  background: hsla(10, 100%, 70%);
  color: white;
  box-shadow: var(--box-shadow);
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;

  transition: transform 5s;
}

.individual-content + .individual-content {
  margin-top: 1.5rem;
}

.content-title {
  margin: 0;
  font-size: max(1.3rem, 2vw);
}

.content-description {
  font-size: max(1rem, 1vw);
}

#gotojoanavideo.exitAnimation {
  animation: slideOutLeft var(--contentExitAnimationDuration)
    var(--animationTimingFunctionSecondary);
  animation-fill-mode: forwards;
}

#gotomikepuzzle.exitAnimation {
  animation: slideOutRight var(--contentExitAnimationDuration)
    var(--animationTimingFunctionSecondary);
  animation-fill-mode: forwards;
}

#poetryVideoContainer {
  position: absolute;
  z-index: 1;

  bottom: calc(-1 * var(--poetryVideoContainerHeight));

  --halfWidth: calc(var(--poetryVideoContainerWidth) / 2);
  right: calc(50% - var(--halfWidth));

  transition: all var(--poetryVideoEnterAnimationDuration)
    var(--animationTimingFunctionSecondary)
    var(--poetryVideoEnterAnimationDelay);
}

#poetryVideoContainer.enterAnimation {
  --yTranslation: calc(-1 * calc(100vh - var(--titleHeightWithMargins)));
  transform: translateY(var(--yTranslation));
}

#poetryVideo {
  box-shadow: var(--box-shadow);
}

#poetryVideo:focus {
  outline: none;
}

#gobacktohomepage {
  cursor: pointer;

  font-size: 1.2rem;
  text-transform: uppercase;

  box-shadow: var(--box-shadow);

  padding: 1rem;

  align-self: stretch;

  transition: color, background-color 350ms ease-in-out;
  transition: filter 50ms ease-in-out;

  display: block;

  margin: 1.2rem auto 0;
}

#gobacktohomepage:hover {
  filter: brightness(1.1);
}

#gobacktohomepage[data-state="primary"]:focus {
  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5);
}

#gobacktohomepage[data-state="secondary"]:focus {
  box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.5);
}

#gobacktohomepage[data-state="secondary"] {
  background-color: hsl(45, 100%, 52%);
  color: hsl(20, 100%, 40%);
}

#gobacktohomepage[data-state="primary"] {
  background-color: hsl(225, 100%, 52%);
  color: white;
}

@keyframes curtainLeftExitAnimation {
  to {
    transform: translateX(-100%);
  }
}

@keyframes curtainRightExitAnimation {
  to {
    transform: translateX(100%);
  }
}

@keyframes titleEnterAnimation {
  to {
    transform: none;
  }
}

@keyframes show {
  to {
    opacity: 1;
  }
}

@keyframes slideOutRight {
  to {
    transform: translateX(var(--contentExitAnimationTranslationValue));
    opacity: 0;
  }
}

@keyframes slideOutLeft {
  to {
    transform: translateX(
      calc(-1 * var(--contentExitAnimationTranslationValue))
    );
    opacity: 0;
  }
}

@keyframes slideOutDown {
  to {
  }
}

@keyframes slideInUp {
  to {
    opacity: 1;
    --yTranslation: calc(
      -1 * calc(50vh + calc(var(--poetryVideoContainerHeight) / 2))
    );
    transform: translateY(var(--yTranslation));
  }
}

@media (min-width: 768px) {
  .individual-content {
    height: 12rem;
  }

  #content-layout {
    flex-direction: row;
    justify-content: center;
  }

  .individual-content + .individual-content {
    margin-top: 0;
    margin-left: 2rem;
  }
}
